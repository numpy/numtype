[build-system]
requires = ["uv_build>=0.8.17,<0.9"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = ["numpy-stubs", "_numtype", "numtype"]
module-root = "src"
source-exclude = ['\@test', ".ruff_cache", ".ruff.toml"]

[project]
name = "numtype"
version = "2.3.3.0.dev0"
description = "Experimental Typing Stubs for NumPy"
readme = "README.md"
authors = [{ name = "Joren Hammudoglu", email = "jhammudoglu@gmail.com" }]
maintainers = [{ name = "NumPy Developers", email = "numpy-discussion@python.org" }]
license = "BSD-3-Clause"
license-files = ["LICENSE"]
keywords = ["numpy", "typing", "stubs"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Typing :: Stubs Only",
  "Typing :: Typed",
]
packages = [
  { include = "src/_numtype" },
  { include = "src/numpy-stubs" },
  { include = "src/numtype" },
]
requires-python = ">=3.11"
dependencies = []

[project.optional-dependencies]
numpy = ["numpy>=2.3.3,<2.4"]

[project.urls]
Homepage = "https://numpy.org/"
Repository = "https://github.com/numpy/numtype/"
Issues = "https://github.com/numpy/numtype/issues"
Changelog = "https://github.com/numpy/numtype/releases"

[dependency-groups]
numpy = ["numtype[numpy]"]
lint = [
  "dprint-py>=0.50.2.0",
  "ruff>=0.13.0",
]
pytest = [
  { include-group = "numpy" },
  "pytest>=8.4.2",
  "typing_extensions>=4.15.0",
]
list_and_test = [
  { include-group = "lint" },
  { include-group = "pytest" },
]
types = [
  { include-group = "pytest" },
  "types-setuptools>=80.9.0.20250822",
  "types-tabulate>=0.9.0.20241207",
]
basedpyright = [
  { include-group = "numpy" },
  { include-group = "types" },
  "basedpyright==1.31.4", # trait broke divmod in 1.1.404
]
mypy = [
  { include-group = "types" },
  "mypy[faster-cache]>=1.18.1",
]
typecheck = [
  { include-group = "basedpyright" },
  { include-group = "mypy" },
]
docs = [
  "mkdocs-material>=9.6.20",
  "mkdocs-awesome-nav>=3.2.0",
  "markdown-callouts>=0.4.0",
  "mkdocs-include-markdown-plugin>=7.1.7",
  "mkdocs-minify-plugin>=0.8.0",
  "mkdocstrings[python]>=0.30.0",
  "pygments>=2.19.2",
]
dev = [
  { include-group = "list_and_test" },
  { include-group = "typecheck" },
  { include-group = "docs" },
]

# mypy

[tool.mypy]
mypy_path = "src"
strict = true
enable_error_code = [
  "explicit-override",
  "ignore-without-code",
  "redundant-expr",
  "truthy-bool",
]
enable_incomplete_feature = ["PreciseTupleTypes"]
allow_redefinition_new = true
local_partial_types = true
warn_incomplete_stub = true
warn_unreachable = false

# (based)pyright

[tool.pyright]
include = ["src", "tool"]
ignore = [".venv"]
exclude = [
  ".cache",
  ".git",
  ".github",
  ".mypy_cache",
  ".pytest_cache",
  ".ruff_cache",
  ".tox",
  ".vscode",
  "docs",
  "site",
]
stubPath = "src"
pythonPlatform = "All"
typeCheckingMode = "strict"

deprecateTypingAliases = true
disableBytesTypePromotions = true
enableTypeIgnoreComments = false
enableReachabilityAnalysis = false
reportCallInDefaultInitializer = true
reportImportCycles = true
reportImplicitOverride = true
reportInvalidStubStatement = false # required for type-testing
reportMissingSuperCall = false
reportPrivateUsage = false
reportPropertyTypeMismatch = false
reportSelfClsParameterName = false
reportShadowedImports = false # causes a ~35% slowdown
reportUninitializedInstanceVariable = true
reportUnnecessaryTypeIgnoreComment = true
reportUnusedExpression = false
reportUnusedParameter = false
reportUnusedVariable = true
# basedpyright only
failOnWarnings = true
reportIgnoreCommentWithoutRule = true
reportImplicitAbstractClass = true
reportImplicitRelativeImport = true
reportImplicitStringConcatenation = false
reportIncompatibleUnannotatedOverride = true
reportInvalidAbstractMethod = true
reportInvalidCast = true
reportPrivateLocalImportUsage = true
reportUnannotatedClassAttribute = false
strictGenericNarrowing = true

# ruff

[tool.ruff]
src = ["src", "tool"]
extend-exclude = [".git", ".mypy_cache", ".tox", ".venv"]
force-exclude = true
line-length = 120
preview = true

[tool.ruff.format]
line-ending = "lf"
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = ["ALL"]
ignore = ["CPY", "FIX002", "COM812"]

[tool.ruff.lint.per-file-ignores]
"*.pyi" = ["TD"]

[tool.ruff.lint.flake8-builtins]
builtins-allowed-modules = ["random"]

[tool.ruff.lint.flake8-import-conventions]
banned-from = [
  "abc",
  "basedtyping",
  "ctypes",
  "datetime",
  "os",
  "sys",
  "numpy",
  "numpy.typing",
  "_numtype",
]
[tool.ruff.lint.flake8-import-conventions.extend-aliases]
"ctypes" = "ct"
"datetime" = "dt"
"numpy" = "np"
"numpy.typing" = "npt"
"numtype" = "nt"
"_numtype" = "_nt"

[tool.ruff.lint.isort]
case-sensitive = true
combine-as-imports = true
extra-standard-library = ["_typeshed", "typing_extensions"]
known-first-party = ["numpy", "numtype", "_numtype"]
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
allow-dunder-method-names = ["__array__", "__array_ufunc__"]

# pytest

[tool.pytest.ini_options]
minversion = "8.0"
addopts = ["-ra", "--strict-config", "--strict-markers"]
filterwarnings = ["error"]
log_cli_level = "INFO"
xfail_strict = true

# tox

[tool.tox]
# install with `uv tool install tox --with tox-uv --upgrade` and run with `uvx tox p`
min_version = "4"
requires = ["tox-uv>=1"]
env_list = [
  "ruff",
  "pytest",
  "basedpyright",
  "mypy",
  "3.11",
  "3.12",
  "3.13",
  "3.14",
]

[tool.tox.env_run_base]
description = "stubtest ({base_python})"
commands = [
  [
    "uv",
    "run",
    "-q",
    "-p={base_python}",
    "--active",
    "tool/stubtest.py",
    "--concise",
  ],
]

[tool.tox.env.ruff]
description = "ruff"
runner = "uv-venv-lock-runner"
dependency_groups = ["dev"]
commands = [
  ["ruff", "check", "--show-fixes"],
  ["ruff", "format", "--check"],
]

[tool.tox.env.pytest]
description = "pytest"
runner = "uv-venv-lock-runner"
dependency_groups = ["dev", "numpy"]
commands = [["pytest"]]

[tool.tox.env.basedpyright]
description = "basedpyright"
runner = "uv-venv-lock-runner"
dependency_groups = ["dev"]
commands = [["basedpyright", { replace = "posargs", default = [], extend = true }]]

[tool.tox.env.mypy]
description = "mypy"
runner = "uv-venv-lock-runner"
dependency_groups = ["dev", "types"]
commands = [
  [
    "mypy",
    "--no-incremental",
    "--cache-dir=/dev/null",
    { replace = "posargs", default = ["."], extend = true },
  ],
]

# typos

[tool.typos]

[tool.typos.default]
extend-ignore-identifiers-re = ['ND|nd|nin|NIN|TYP']

[tool.typos.files]
extend-exclude = ["*.pyi", ".mypyignore"]
